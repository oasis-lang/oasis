// Code generated by "stringer -type=Opcode"; DO NOT EDIT.

package core

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PushInt-0]
	_ = x[PushFloat-1]
	_ = x[PushBool-2]
	_ = x[PushString-3]
	_ = x[PushChar-4]
	_ = x[PushByte-5]
	_ = x[PushNil-6]
	_ = x[FetchVariable-7]
	_ = x[DefineVariable-8]
	_ = x[AssignVariable-9]
	_ = x[GetIndex-10]
	_ = x[GetProperty-11]
	_ = x[AssignIndex-12]
	_ = x[AssignProperty-13]
	_ = x[CallFunction-14]
	_ = x[PushEmptyProto-15]
	_ = x[MakeFunction-16]
	_ = x[EndFunction-17]
	_ = x[ReturnOp-18]
	_ = x[Jump-19]
	_ = x[JumpIf-20]
	_ = x[JumpIfFalse-21]
	_ = x[EqualOp-22]
	_ = x[LessOp-23]
	_ = x[LessEqualOp-24]
	_ = x[GreaterOp-25]
	_ = x[GreaterEqualOp-26]
	_ = x[Add-27]
	_ = x[Subtract-28]
	_ = x[Multiply-29]
	_ = x[Divide-30]
	_ = x[Modulo-31]
	_ = x[Negate-32]
	_ = x[NotOp-33]
	_ = x[AndOp-34]
	_ = x[OrOp-35]
	_ = x[CloneOp-36]
	_ = x[CreateList-37]
	_ = x[PushListItem-38]
	_ = x[CreateTuple-39]
	_ = x[CreateMap-40]
	_ = x[CreateIterator-41]
	_ = x[PushMapItem-42]
	_ = x[MapFn-43]
	_ = x[SetMarker-44]
	_ = x[PopMarker-45]
	_ = x[Next-46]
	_ = x[IsIteratorExhausted-47]
	_ = x[PushScope-48]
	_ = x[PopScope-49]
	_ = x[BreakOp-50]
	_ = x[ContinueOp-51]
	_ = x[EndProgram-52]
	_ = x[Dup-53]
	_ = x[Pop-54]
	_ = x[Pop1-55]
	_ = x[Pop2-56]
	_ = x[NullCoalesce-57]
	_ = x[TailCall-58]
	_ = x[SpawnFunction-59]
	_ = x[SendOp-60]
	_ = x[RecvOp-61]
	_ = x[ExportOp-62]
	_ = x[LastInstruction-63]
}

const _Opcode_name = "PushIntPushFloatPushBoolPushStringPushCharPushBytePushNilFetchVariableDefineVariableAssignVariableGetIndexGetPropertyAssignIndexAssignPropertyCallFunctionPushEmptyProtoMakeFunctionEndFunctionReturnOpJumpJumpIfJumpIfFalseEqualOpLessOpLessEqualOpGreaterOpGreaterEqualOpAddSubtractMultiplyDivideModuloNegateNotOpAndOpOrOpCloneOpCreateListPushListItemCreateTupleCreateMapCreateIteratorPushMapItemMapFnSetMarkerPopMarkerNextIsIteratorExhaustedPushScopePopScopeBreakOpContinueOpEndProgramDupPopPop1Pop2NullCoalesceTailCallSpawnFunctionSendOpRecvOpExportOpLastInstruction"

var _Opcode_index = [...]uint16{0, 7, 16, 24, 34, 42, 50, 57, 70, 84, 98, 106, 117, 128, 142, 154, 168, 180, 191, 199, 203, 209, 220, 227, 233, 244, 253, 267, 270, 278, 286, 292, 298, 304, 309, 314, 318, 325, 335, 347, 358, 367, 381, 392, 397, 406, 415, 419, 438, 447, 455, 462, 472, 482, 485, 488, 492, 496, 508, 516, 529, 535, 541, 549, 564}

func (i Opcode) String() string {
	if i >= Opcode(len(_Opcode_index)-1) {
		return "Opcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
